<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="StatusStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>205, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIEAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAgAQAAAAAAAAAAAAAAAAAAAAA
        AAD///8AKtXWADG3twAumbIAXTy9AFs2pwBYMJEAQhx0ALHr+QCfzPkAhrf1AG2h8ABOg+8AU2bSAEBR
        tAAtPJYA////AMzV/ACXpPcAcHjgAFhguQBCS5kAspxTAJuITACOejcAhGpTAJuXpgCCfZAAaWN5AFBJ
        YwBIQFwANy5MAM/l4gC8y84Am6yuAIeUkQBfa2gAOUdEAKiAmACQaIAAeFBoAFA2RgBIr/cAJIr3AEZz
        8wAaTNEADSvKABIgrADZx34A7q9+AOiWZwDWfGMAwGlaAJZXPgBFRdEAOzmyAC8tkwAjH3IAdJvFAFGC
        tgBOdJgALWaUADBTdgAeRFcA16nSAOWXtADZdI0AvFZyAKVHXACaNlEAqOS4AHK/kAA4lmMAMYBTAJjj
        eQCBx2YAbbhIAGmcTwA21/8AAAAAAPr7lACt5kIAl8g9AJipLwCShzAAa2shAE1NGgB0Z7cAcVqaAFlF
        eACe+/oAeuX4AGTO+QBrtPMATonOAE9npQDY+PYAk9TgAHK1xgBXlqEAQnF5ADBSWADSk+MAr3vSAJJY
        sAB0NY0AZixnAFiQsABQeKAARGSEADNKYQAiMD4AkeX7AHTG9QBmtu4AY6jrAFaX0ADa8/gAtOX2AJnH
        6wCHttIAgqfMAK+GswCieq8ApHmVAJpijgCMWXQADAcFAHRs7ABcYuAATUnIAGtAqwBPNKEAQyaKAJmI
        8gB8c/oAUk3WANbVtwDTx5QA0sF4AMa1dADCqXMAuZ1WAK+LNACf3v8Ab73/AGeU3gBggdMATmeuADxH
        hAApJ1oAFgcwAKP//wCE6N4AZdG8AEW6mgAlo4UAIX5lABxZRAAXMyMAz///ALne4QCjvcMAjZylAHd6
        hwBhWWkASzhLADQWLAD/9NMA/9q5AOXAqgDEmJsAo3N2AH5GQwBZMDQAUR4LAMD/9AC15cQAkMJ8AHih
        bABkhWAATnNDADtZLAApQyEA0/v/ALzp/wCuz+kAjLHTAIybvAB2gZsAb2+UAFVObwCU9NoAguXUAHrU
        uwBzxboAZ6qqAGOlmgBalYsAUIV7AKCt/wCQf+MAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAzNX8AJek
        9wB8c/oAUk3WAP///wD/2rkA2cd+AO6vfgDolmcA2XSNALKcUwDWfGMAwGlaAKVHXACWVz4ATU0aAE80
        oQBrQKsAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/
        AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/
        AAC427gAGa6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq4ZGa6urq6urq6urq6urq6urq6urq6u
        rq6urq6urq6urhkZFhaNFldXaGlnZmiNj4+NjY2NjY2NjY2NjQCJia6uGRkWV1dXjWZnaGhnaACNjYuL
        i4+PVVVXjY2NjQCJrq4ZGVeGj4+LaGgAACEAAAAAjY2NUI2NVclXV42NjYmurhkZWIaPi4uLiwAOCxMh
        AAAAAI2NjVWGyRHJV42Nja6uGRlYV4aPj4+PDg4TDQ0NDQ0AIVWGhoaGyBHIhliNrq4ZGRdXhoaPjw4O
        CggKCgwODsnJyYaGycjJERGGWI2urhkZWIaGhoYOCrm5ubm5CgoTDlcSV4bJEhIAAIZXWK6uGVhYERGG
        Dgq5uQAAubm5CgpXVxESV1cSEgAAhoZYrq4ZWIYREQ4LubkAALm5qTGpClcSABJXV8nJyBGGhliurhlY
        hgARDgozqrm5uakzNTMAVxIAEslXV8nIEYaGWK6uGViGAIYOqjUzqQkLqTU1AAkJVxESEslXycjIhoZY
        rq4ZGViGVw4zADULCQspKTUzKVeGEoeHeXh2dniGV42urhkZNVfJVzU1KQlXVwopKSlXhoYSh4d4dXV2
        dnxXFq6uGRk1yclXWFgJV4bJVwoJCVeGhhKHeXV1d3Z4dnwWrq4ZGVjJychXV1eGEslXV1eGhobIEod1
        dXl3eXZ2fBaurhlXyMnIyMjJV8gREoaGyMjIhsiHh3V1eXp2eHh3e66uGVjIyBHIyMnJyBEShsjIERER
        yA0NeXV1eXZ6eHd7rq4ZWFjIERHIyMnIyBGGyMgAEcjICgoNDQ11dnl3d3yurhkZrcjIAADIyMnIEcjI
        EcjIDAgICA15enp2dnd8F66uGRkNyMgRAAARyMjIyBHIyIcMCAkMd3d3dwB2d3wWrq4ZDQgNyMjIERER
        EcjIyIaGDAkIDHp3d3d2AHZ8rBeurhkNDQgIhsjIyMjIyMjIyMiGhgyGhnp6d3Z2fBcYrK6uGRmtDQgI
        hobIyMjIyMjIyMjIyIaGhoZ6fHwYFxcYrq4ZGa0NDYaGyMjIyMjIyMjIyMjIyIaGhoZXGBgZF6yurhkZ
        ra1XhobIyMjIyIaGyMjIyMjIhoaGVxgYGBgZF66uGRmtra2tV4aGhoaGhoaGhoaGhoaGV1cZGRkZGBkX
        rq4ZGa2tra2trVdXhoaGhoaGhoZXV1c1NTU1GRkZGBmurhkZra2tra2tra2tV1eHV1dXV62tNa01NTU1
        NRkZGbeuGRkXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXGa4Xq6urq6urq6urq6urq6urq6urq6ur
        q6urq6urq6urGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>